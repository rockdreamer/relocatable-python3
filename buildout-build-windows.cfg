[buildout]
extends = buildout-build.cfg
parts = mkdir zlib xz db openssl libiconv-no-nls-static bzip2 gettext-static libiconv-static tcl tcl-win tk tk-win sqlite3 sqlite3-win libxml2 libxml2-win libxslt libxslt-win libevent python python-win-instrumentation python-win

[environment-windows]
APPVER = 5.02
CPU = i386
TARGETOS = WINNT
FrameworkVersion = v4.0.30319
OS = Windows_NT
RegKeyPath = HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\SxS\VC7
VSRegKeyPath = HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\SxS\VS7
SystemDrive = C:
WinDir = ${:SystemDrive}\WINDOWS
ProgramFiles = ${:SystemDrive}\Program Files
ORIGINALPATH = ${:WinDir}\system32;${:WinDir};${:WinDir}\System32\Wbem;${:ProgramFiles}\Git\cmd;${:ProgramFiles}\Git\bin;C:\Python27

FrameworkDir = ${:WinDir}\Microsoft.NET\Framework
FxTools = ${:FrameworkDir}\v3.5;${:FrameworkDir}\${:FrameworkVersion}
WindowsSdkDir = ${:ProgramFiles}\Microsoft SDKs\Windows\v7.0
VSINSTALLDIR = ${:ProgramFiles}\Microsoft Visual Studio 10.0
VCRoot = ${:VSINSTALLDIR}\VC
VCINSTALLDIR = ${:VCRoot}
VC100CRT = ${:VCRoot}\redist\x86\Microsoft.VC100.CRT\msvcr100.dll
INCLUDE = ${:VCRoot}\Include;${:WindowsSdkDir}\Include;${:WindowsSdkDir}\Include\gl;${:VCRoot}\ATLMFC\INCLUDE;
MSSdk = ${:WindowsSdkDir}
NODEBUG = 1
SdkSetupDir = ${:WindowsSdkDir}\Setup
SdkTools = ${:WindowsSdkDir}\Bin
DevEnvDir = ${:VSINSTALLDIR}\Common7\IDE
INCLUDE = ${:VCRoot}\ATLMFC\INCLUDE;${:VCRoot}\INCLUDE;${:WindowsSdkDir}\include;${:PREFIX}\include
ATLMFC_LIB = ${:VCRoot}\ATLMFC\LIB
VSLIB = ${:VCRoot}\LIB
SDKLIB = ${:WindowsSdkDir}\lib
SDKBIN = ${:WindowsSdkDir}\bin
LIB = ${:ATLMFC_LIB};${:VSLIB};${:SDKLIB};${:PREFIX}\lib
LIBPATH = ${:FrameworkDir};${:FrameworkDir}\${:FrameworkVersion};${:ATLMFC_LIB};${:VSLIB}
Recipe = hexagonit.recipe.cmmi
VSBIN = ${:VCRoot}\BIN
PosixHomeDir=${:SystemDrive}\Cygwin\home\Administrator
GitDir = ${:PosixHomeDir}\git
GitBinDir = ${:GitDir}\bin
CygwinBinDir = ${:SystemDrive}\Cygwin\bin
PythonDir = ${:PosixHomeDir}\python
PythonBinDir = ${:PythonDir}\bin
PATH = ${:DevEnvDir};${:VSBIN};${:VSINSTALLDIR}\Common7\Tools;${:VSINSTALLDIR}\Common7\Tools\bin;${:FrameworkDir};${:FrameworkDir}\Microsoft .NET Framework 3.5 (Pre-Release Version);${:FrameworkDir}\${:FrameworkVersion};${:VCRoot}\VCPackages;${:SDKBIN};${:WinDir}\system32;${:WinDir};${:WinDir}\System32\Wbem;${:GitDir}\cmd;${:GitBinDir};${:PythonBinDir};${:CygwinBinDir}
PREFIX = ${options:prefix}
IIPREFIX = ${options:prefix}
PerlExe = ${:SystemDrive}\Perl\bin\perl.exe

MSVCDIR = ${:VSINSTALLDIR}

[environment_dup]
LIB = ${:VCRoot}\Lib;${:WindowsSdkDir}\Lib;${:VCRoot}\ATLMFC\LIB;
Path = ${:VCRoot}\Bin;${:VCRoot}\vcpackages;${:VSINSTALLDIR}\Common7\IDE;${:WindowsSdkDir}\Bin;${:WinDir}\Microsoft.NET\Framework\v3.5;${:WinDir}\Microsoft.NET\Framework\${:FrameworkVersion};${:WindowsSdkDir}\Setup;${:WinDir}\system32;${:WinDir};${:WinDir}\System32\Wbem;${:ProgramFiles}\Git\cmd;${:ProgramFiles}\Git\bin;C:\Python27

[visual-studio-2008-environment]
<= environment-windows
VSINSTALLDIR = ${:ProgramFiles}\Microsoft Visual Studio 9.0
VCRoot = ${:VSINSTALLDIR}\VC
VSBIN = ${:VCRoot}\BIN
DevEnvDir = ${:VSINSTALLDIR}\Common7\IDE
PATH = ${:DevEnvDir};${:VSBIN};${:VSINSTALLDIR}\Common7\Tools;${:VSINSTALLDIR}\Common7\Tools\bin;${:FrameworkDir};${:FrameworkDir}\Microsoft .NET Framework 3.5 (Pre-Release Version);${:FrameworkDir}\${:FrameworkVersion};${:VCRoot}\VCPackages;${:SDKBIN};${:WinDir}\system32;${:WinDir};${:WinDir}\System32\Wbem;${:GitDir}\cmd;${:GitBinDir};${:PythonBinDir};${:CygwinBinDir}

[options]
configure-command = true
configure-options =
make-binary = nmake
make-options = -f win32/Makefile.msc
environment-section = environment-windows
prefix = ${buildout:directory}\dist
hooks-dir = ${buildout:directory}\src\hooks

[mkdir]
recipe = z3c.recipe.mkdir
paths = dist
    dist/bin
    dist/lib
    dist/include

[zlib]
name = zlib
version = 1.2.11
url = ${urls:source}/${:name}-${:version}.tar.gz
patches = ${:patches-dir}/${:name}-${:version}-windows-Makefile.patch

[xz]
# pre-built binaries used for lzma
<= options
recipe = hexagonit.recipe.cmmi
name = xz
version = 5.0.5
url = ftp://python.infinidat.com/python/sources/xz-${:version}-windows.zip
configure-command = true
make-binary = true
post-make-hook = ${options:hooks-dir}\windows.py:xz_post_make

[openssl]
configure-command = ${environment-windows:PerlExe}
configure-options = Configure VC-WIN32 enable-zlib enable-static-engine enable-zlib-dynamic enable-capieng no-asm no-shared --prefix=${options:prefix}
make-targets = install
make-options = -f ms\nt.mak
pre-make-hook = ${options:hooks-dir}\windows.py:openssl_pre_make
name = openssl
patches = ${:patches-dir}/${:name}-${:version}-windows-batchfile.patch

[libiconv-no-nls]
<= options
   gnu
recipe = hexagonit.recipe.cmmi
# last version that has a Makefile for MSVC
version = 1.11.1
make-options = -f Makefile.msvc NO_NLS=1 MFLAGS=-MT PREFIX=${options:prefix}
name = libiconv
patches = ${:patches-dir}/${:name}-${:version}-windows-Makefile.patch

[libiconv-no-nls-static]
<= options
   gnu
recipe = hexagonit.recipe.cmmi
# last version that has a Makefile for MSVC
version = 1.9.1
make-options = -f Makefile.msvc NO_NLS=1 MFLAGS=-MT PREFIX=${options:prefix}
name = libiconv

[bzip2]
configure-command = true
make-options = -f makefile.msc PREFIX=${options:prefix}
name = bzip2
patches = ${:patches-dir}/${:name}-${:version}-windows-Makefile.patch

[gettext]
# last version that has a Makefile for MSVC
version = 0.14.6
make-options = -f Makefile.msvc MFLAGS=-MT PREFIX=${options:prefix}
patches = ${:patches-dir}/${:name}-${:version}-windows-localename.patch

[gettext-static]
<= options
   gnu
recipe = hexagonit.recipe.cmmi
version = 0.12.1
name = gettext
make-options = -f Makefile.msvc MFLAGS=-MT PREFIX=${options:prefix}

[libiconv]
# last version that has a Makefile for MSVC
version = 1.11.1
make-options = -f Makefile.msvc MFLAGS=-MT PREFIX=${options:prefix}
patches = ${:patches-dir}/${:name}-${:version}-windows-Makefile.patch

[libiconv-static]
<= options
   gnu
recipe = hexagonit.recipe.cmmi
version = 1.9.1
name = libiconv
make-options = -f Makefile.msvc MFLAGS=-MT PREFIX=${options:prefix}

[tcl]
<= options
recipe = hexagonit.recipe.cmmi
name = tcl
version = 8.5.15
url = ${urls:source}/${:name}${:version}-src.tar.gz
configure-command = true
make-binary = true

[tcl-win]
<= options
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}\parts\tcl__compile__\tcl8.5.15\win
make-binary = nmake
make-options = -f Makefile.vc all OPTS=static,threads INSTALLDIR=${options:prefix}

[tk]
<= options
recipe = hexagonit.recipe.cmmi
name = tk
version = 8.5.15
url = ${urls:source}/${:name}${:version}-src.tar.gz
configure-command = true
make-binary = true

[tk-win]
<= options
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}\parts\tk__compile__\tk8.5.15\win
make-binary = nmake
make-options = -f Makefile.vc all OPTS=static,threads INSTALLDIR=${options:prefix} TCLDIR=${buildout:directory}\parts\tcl__compile__\tcl8.5.15

[sqlite3]
make-binary = true
version = autoconf-3070602
patches = ${:patches-dir}/sqlite3-autoconf-3070602-windows-makefile.patch

[sqlite3-win]
<= options
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}\parts\sqlite3__compile__\sqlite-autoconf-3070602\tea\win
make-binary = nmake
make-options = -f Makefile.vc all install OPTS=static,threads INSTALLDIR=${options:prefix}

[db]
<= options
environment-section = visual-studio-2008-environment
make-binary = devenv
make-options = build_windows\Berkeley_DB.sln /build "Release|Win32"
configure-command = true
patches = ${:patches-dir}/db-5.1.25-windows-solution.patch
post-make-hook = ${options:hooks-dir}\windows.py:db_post_make

[libxml2]
make-binary = true
patches = ${:patches-dir}/libxml2-${:version}-windows-Makefile.patch

[libxml2-win]
<= options
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}\parts\libxml2__compile__\libxml2-${libxml2:version}\win32
configure-command = cscript
configure-options = configure.js compiler=msvc cruntime=/MT prefix=${options:prefix} include=${options:prefix}\include lib=${options:prefix}\lib
make-options = -f Makefile.msvc

[libxslt]
patches = ${:patches-dir}/libxslt-${:version}-windows-Makefile.patch
make-binary = true

[libxslt-win]
<= options
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}\parts\libxslt__compile__\libxslt-${libxslt:version}\win32
configure-command = cscript
configure-options = configure.js compiler=msvc cruntime=/MT prefix=${options:prefix} include=${options:prefix}\include lib=${options:prefix}\lib
make-options = -f Makefile.msvc

[cyrus-sasl]
make-options = /f NTMakefile CFG=Release DB_INCLUDE=${options:prefix}\include DB_LIBPATH=${options:prefix}\lib OPENSSL_INCLUDE=${options:prefix}\include OPENSSL_LIBPATH=${options:prefix}\lib DB_LIB=libdb51.lib
patches = ${:patches-dir}/${:name}-${:version}-windows-Makefile.patch
    ${:patches-dir}/${:name}-${:version}-windows-plugins-Makefile.patch
    ${:patches-dir}/${:name}-${:version}-digestmd5.patch
    ${:patches-dir}/${:name}-${:version}-digestmd5.patch

[libevent]
version = 2.0.17
make-options = -f Makefile.nmake
make-targets = static_libs
post-make-hook = ${options:hooks-dir}\windows.py:libevent_post_make

[python]
make-binary = true
patch-binary = git init && git apply --ignore-whitespace
patches = ${:patches-dir}/${:name}-${:version}-windows-Makefile.patch
    ${:patches-dir}/${:name}-${:version}-windows-Makefile-win32.patch
    ${:patches-dir}/${:name}-${:version}-sysconfig.py.patch
    ${:patches-dir}/${:name}-${:version}-disutils-sysconfig.py.patch
    ${:patches-dir}/${:name}-${:version}-pythonhome-pythonrun.c.patch
    ${:patches-dir}/${:name}-${:version}-windows-getpathp.patch
    ${:patches-dir}/${:name}-${:version}-windows-distutils-static-compile.patch
post-make-hook =

[python-win-instrumentation]
<= options
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}\parts\python__compile__\python-${python:version}\PCbuild
make-binary = msbuild
make-options = pcbuild.sln /p:Configuration=PGInstrument;Platform=Win32
environment-section = python-win-environment
make-targets =

[python-win]
<= python-win-instrumentation
make-options = pcbuild.sln /p:Configuration=PGUpdate;Platform=Win32
post-make-hook = ${options:hooks-dir}\windows.py:python_post_make

[python-win-environment]
<= environment-windows
bsddbDir = ${options:prefix}\..\parts\db__compile__\db-5.1.25\src\db

[libffi]
make-binary = true
